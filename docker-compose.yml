services:
  # PostgreSQL Database
  postgres:
    image: postgres:18-alpine
    container_name: todo-postgres
    restart: unless-stopped
    ports:
      # localhost:5433 -> postgres:5432
      # Host port : Container port
      - "5433:5432"
    environment:
      - POSTGRES_USER=todo
      - POSTGRES_PASSWORD=todo
      - POSTGRES_DB=todo_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: todo-backend
    restart: unless-stopped
    ports:
      # localhost:8001 -> backend:8000 (changed for Postman testing)
      # Host port : Container port
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://todo:todo@postgres:5432/todo_db
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
      - BACKEND_CORS_ORIGINS=http://localhost:4201,http://localhost:80
      # OAuth2 Configuration
      - OAUTH2_ENABLED=${OAUTH2_ENABLED:-true}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost:4201/auth/callback/google}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI:-http://localhost:4201/auth/callback/github}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID:-}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET:-}
      - MICROSOFT_REDIRECT_URI=${MICROSOFT_REDIRECT_URI:-http://localhost:4201/auth/callback/microsoft}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:4201}
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - ./backend/tests:/app/tests
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - todo-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: todo-frontend
    restart: unless-stopped
    ports:
      - "4201:4200"
    environment:
      - API_BASE_URL=http://localhost:8001
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - todo-network

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: todo-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - todo-network
    profiles:
      - tools

networks:
  todo-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
